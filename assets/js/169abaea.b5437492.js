"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[57],{4137:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var s=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,s,r=function(e,t){if(null==e)return{};var n,s,r={},o=Object.keys(e);for(s=0;s<o.length;s++)n=o[s],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)n=o[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=s.createContext({}),c=function(e){var t=s.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return s.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},y=s.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),y=r,m=u["".concat(l,".").concat(y)]||u[y]||d[y]||o;return n?s.createElement(m,a(a({ref:t},p),{},{components:n})):s.createElement(m,a({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=y;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:r,a[1]=i;for(var c=2;c<o;c++)a[c]=n[c];return s.createElement.apply(null,a)}return s.createElement.apply(null,n)}y.displayName="MDXCreateElement"},4411:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var s=n(7462),r=(n(7294),n(4137));const o={},a="CSS",i={unversionedId:"guides/css",id:"guides/css",title:"CSS",description:"With Typing, you can easily apply CSS styles or classes to note types.",source:"@site/docs/guides/css.md",sourceDirName:"guides",slug:"/guides/css",permalink:"/obsidian-typing/docs/guides/css",draft:!1,editUrl:"https://github.com/konodyuk/obsidian-typing/tree/main/docs/docs/guides/css.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Links",permalink:"/obsidian-typing/docs/guides/link"},next:{title:"Hooks",permalink:"/obsidian-typing/docs/guides/hooks"}},l={},c=[{value:"Applying CSS Classes to Notes",id:"applying-css-classes-to-notes",level:2},{value:"Direct CSS Styling",id:"direct-css-styling",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,s.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"css"},"CSS"),(0,r.kt)("p",null,"With Typing, you can easily apply CSS styles or classes to note types."),(0,r.kt)("h2",{id:"applying-css-classes-to-notes"},"Applying CSS Classes to Notes"),(0,r.kt)("p",null,"By default in Obsidian, CSS classes for a specific note can be assigned through its frontmatter like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-md"},'---\ncssClasses: ["class-one", "class-two"]\n---\n')),(0,r.kt)("p",null,"In Typing, you can extend this functionality to apply CSS classes to an entire note type. Here's how:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-otl"},'type TypeName {\n    style {\n        css_classes = ["class-one", "class-two"]\n    }\n}\n')),(0,r.kt)("p",null,"When you set it this way, the specified classes will be automatically applied to all notes of the type ",(0,r.kt)("inlineCode",{parentName:"p"},"TypeName"),"."),(0,r.kt)("h2",{id:"direct-css-styling"},"Direct CSS Styling"),(0,r.kt)("p",null,"Beyond just classes, Typing also allows you to directly integrate CSS code into your notes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-otl"},'type TypeName {\n    style {\n        css = css"""\n            & a {\n                text-decoration: underline\n            }\n        """\n    }\n}\n')),(0,r.kt)("p",null,"This ",(0,r.kt)("inlineCode",{parentName:"p"},"css")," attribute utilizes ",(0,r.kt)("a",{parentName:"p",href:"https://emotion.sh"},"emotion")," for rendering. For advanced styling techniques and nuances, refer to the ",(0,r.kt)("a",{parentName:"p",href:"https://emotion.sh/docs/introduction"},"emotion documentation"),"."))}d.isMDXComponent=!0}}]);