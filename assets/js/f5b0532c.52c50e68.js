"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[274],{4137:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=s(n),m=i,f=c["".concat(p,".").concat(m)]||c[m]||d[m]||a;return n?r.createElement(f,l(l({ref:t},u),{},{components:n})):r.createElement(f,l({ref:t},u))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[c]="string"==typeof e?e:i,l[1]=o;for(var s=2;s<a;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3189:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var r=n(7462),i=(n(7294),n(4137));const a={},l="Prefix",o={unversionedId:"guides/prefix",id:"guides/prefix",title:"Prefix",description:"Title prefixes provide a customizable way to name notes.",source:"@site/docs/guides/prefix.md",sourceDirName:"guides",slug:"/guides/prefix",permalink:"/obsidian-typing/docs/guides/prefix",draft:!1,editUrl:"https://github.com/konodyuk/obsidian-typing/tree/main/docs/docs/guides/prefix.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Fields",permalink:"/obsidian-typing/docs/guides/fields"},next:{title:"Header & Footer",permalink:"/obsidian-typing/docs/guides/header-footer"}},p={},s=[{value:"Supported Interpolations",id:"supported-interpolations",level:2},{value:"<code>{serial}</code>",id:"serial",level:3},{value:"<code>{date_compact}</code>",id:"date_compact",level:3},{value:"Examples",id:"examples",level:2}],u={toc:s},c="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"prefix"},"Prefix"),(0,i.kt)("p",null,"Title prefixes provide a customizable way to name notes.\nThose familiar with Obsidian's ",(0,i.kt)("inlineCode",{parentName:"p"},"Unique note creator")," core plugin will recognize the concept of Zettelkasten prefixes.\nNotes created via this plugin in Obsidian might appear as ",(0,i.kt)("inlineCode",{parentName:"p"},"202308120833 Note Title.md")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"202308120833.md"),"."),(0,i.kt)("p",null,"In Typing, the idea behind prefixes remains the same: enable notes of specific types to have unique names:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"To ensure short links work consistently."),(0,i.kt)("li",{parentName:"ol"},"To streamline the process of writing internal links (for example, typing ",(0,i.kt)("inlineCode",{parentName:"li"},"[[PRJ ")," will auto-complete all the projects)."),(0,i.kt)("li",{parentName:"ol"},"To sometimes serve as a handy unique identifier, akin to GitHub Issues.")),(0,i.kt)("p",null,"To set a title prefix for a type, use this syntax:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-otl"},'type TypeName {\n    prefix = "PREFIX_CONTENT"\n}\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"PREFIX_CONTENT")," can be made up of:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Interpolations: dynamic segments like ",(0,i.kt)("inlineCode",{parentName:"li"},"{interpolation_name}"),"."),(0,i.kt)("li",{parentName:"ol"},"Regular text: any text that isn't an interpolation.")),(0,i.kt)("p",null,"You can combine these in various ways:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"{just_interpolation}")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"just-text")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"text-and-{interpolation}")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"text-and-{interpolation}-and-{other_interpolation}"))),(0,i.kt)("h2",{id:"supported-interpolations"},"Supported Interpolations"),(0,i.kt)("h3",{id:"serial"},(0,i.kt)("inlineCode",{parentName:"h3"},"{serial}")),(0,i.kt)("p",null,"This represents the serial number of the note of a specific type. So, if you set the prefix as ",(0,i.kt)("inlineCode",{parentName:"p"},"P{serial}"),", your notes will start with:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"P1")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"P2")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"P3")),(0,i.kt)("li",{parentName:"ul"},"...")),(0,i.kt)("h3",{id:"date_compact"},(0,i.kt)("inlineCode",{parentName:"h3"},"{date_compact}")),(0,i.kt)("p",null,"This represents the current datetime, accurate to one second. It's compressed to a string of 6-7 characters\n(currently always 6, but will become 7 in 2062). With the prefix ",(0,i.kt)("inlineCode",{parentName:"p"},"A-{date_compact}"),", note names depend on their creation time, for example:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"A-M1A9WM")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"A-N6BF3d")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"A-N869mz"))),(0,i.kt)("p",null,"More interpolations may be introduced in upcoming updates if requested.\nIn the future, other plugins will have a way to register custom interpolations."),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-otl"},'type Meeting {\n    folder = "typed/meeting"\n    prefix = "MTN-{serial}"\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-otl"},'type Event {\n    folder = "typed/event"\n    prefix = "E-{serial}"\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-otl"},'type Zettelkasten {\n    folder = "typed/zettelkasten"\n    prefix = "ZK-{date_compact}"\n}\n')))}d.isMDXComponent=!0}}]);