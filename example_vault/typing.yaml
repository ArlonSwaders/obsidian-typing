types:
    - name: common
      folder: typed/common
      header:
          file: typed/scripts/common_header.js
      footer:
          file: typed/scripts/common_footer.js

    - name: project
      folder: typed/project
      parents: [common]
      icon: fas fa-project-diagram
      actions:
          - name: Add issue to current project
            display:
                icon: far fa-circle-dot
            source: |
                let issue = registry.getTypeByName("issue");
                let tmp = await issue.promptNew(null, {in: `[[${note.path}]]`});
                let newPath = await issue.new(tmp.name, tmp.fields);
                app.workspace.activeLeaf.openFile(
                    this.app.vault.getAbstractFileByPath(newPath)
                );

    - name: issue
      folder: typed/issue
      parents: [common]
      fields:
          - name: in
            kind: link
            args:
                types: [project]
          - name: status
            kind: choice
            args:
                options: [planned, active, completed]
      actions:
          - name: Set status
            display:
                name: status
            source: |
                let newValue = await note.promptField("status")
                if (newValue != null) {
                    note.setField("status", newValue)
                }
      prefix: I-{date_compact}
      icon: far fa-circle-dot

    - name: person
      folder: typed/people
      parents: [common]
      icon: fas fa-user
      footer:
          file: typed/scripts/person_footer.js
      fields:
          - name: name
            kind: any
          - name: surname
            kind: any
      actions:
          - name: Create a meeting
            display:
                name: meeting
            source: |
                let issue = registry.getTypeByName("meeting");
                let tmp = await issue.promptNew(null, {members: `[[${note.path}]]`});
                let newPath = await issue.new(tmp.name, tmp.fields);
                app.workspace.activeLeaf.openFile(
                    this.app.vault.getAbstractFileByPath(newPath)
                );

    - name: meeting
      folder: typed/meetings
      parents: [common]
      icon: fas fa-users
      init: [members, date]
      prefix: M-{date_compact}
      fields:
          - name: members
            kind: link_list
            args:
                types: [person]
          - name: date
            kind: any

overrides:
    - condition: note.type.name == "issue" && note.fields.status == "done"
      icon: far fa-check-circle

actions:
    home:
        name: Home
        display:
            icon: fas fa-house
        source: app.workspace.activeLeaf.openFile(app.vault.getAbstractFileByPath("INDEX.md"))
        pinned: true
    close:
        name: Close Current Pane
        display:
            icon: fas fa-xmark
        source: app.commands.executeCommandById("workspace:close")
        pinned: true
    new:
        name: New
        display:
            icon: fas fa-plus
        source: app.commands.executeCommandById("obsidian-typing:typing-new")
        pinned: true
    field:
        name: Set Field
        display:
            icon: fas fa-angle-right
        source: app.commands.executeCommandById("obsidian-typing:typing-field")
        pinned: true

settings:
    preamble:
        source: |
            function areLinksEqual(a, b) {
              return dv.value.compareValue(a, b, dv.evaluationContext.linkHandler.normalize) == 0
            }
